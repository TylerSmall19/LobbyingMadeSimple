@model PagedList.IPagedList<LobbyingMadeSimple.Web.Models.VoteViewModel>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Vote";
}

<div class="row">
    <div class="col-md-offset-1">
        <h1>Recent Issues</h1>
    </div>
</div>

@foreach (var issue in Model)
{
    <div id="@issue.Id" class="issue border-bottom font-size-lg">
        <div class="row">
            <div class="col-md-5 col-md-offset-1">
                <span class="text-left font-size-lg">
                    @Html.DisplayFor(m => issue.Title)
                </span>
            </div>
            <div class="col-md-3 col-md-offset-3">
                <span class="vote-count-display text-right highlight"> @issue.VotesLeftUntilApproval </span> Needed

                <span class="@issue.ApprovalPercentageColor vote-percentage-string">
                    <span class="vote-percentage text-right">@issue.ApprovalPercentage</span>%
                </span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-lg-4 inline col-md-offset-1">
                @issue.ShortDescription
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 btn-holder col-md-offset-1">
                @using (Html.BeginRouteForm("VoteRoute",
                new { issueId = issue.Id, voteType = "Up" },
                FormMethod.Post, new { @class = "vote-btn btn-group" }))
                {
                    <input class="btn up-vote btn-default @issue.UpvoteButtonColor" type="submit" value="I Agree">
                    @Html.AntiForgeryToken()
                }

                @using (Html.BeginRouteForm("VoteRoute",
                new { issueId = issue.Id, voteType = "Down" },
                FormMethod.Post, new { @class = "vote-btn btn-group" }))
                {
                    @Html.AntiForgeryToken()
                    <input class="btn down-vote btn-default @issue.DownvoteButtonColor" type="submit" value="I Disagree">
                }
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="text-center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Vote",
            new { page }))
    </div>
</div>

@section scripts{
    @Scripts.Render("/Scripts/voting.js")
}